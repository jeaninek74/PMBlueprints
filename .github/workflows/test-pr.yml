# Automated Testing for Pull Requests
# Runs tests when Dependabot (or anyone) creates a PR

name: Test Pull Request

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Check Python syntax
      run: |
        python -m py_compile app.py
        python -m py_compile routes/*.py
    
    - name: Verify imports
      run: |
        python -c "import flask; import openai; import stripe; print('✅ All critical imports successful')"
    
    - name: Check for security vulnerabilities
      run: |
        pip install safety
        safety check --json || echo "⚠️ Security check completed with warnings"
    
    - name: Verify OpenAI compatibility
      run: |
        python -c "from openai import OpenAI; print('✅ OpenAI library compatible')"
    
    - name: Check requirements.txt format
      run: |
        python -c "
        with open('requirements.txt') as f:
            lines = f.readlines()
            for line in lines:
                if line.strip() and not line.startswith('#'):
                    assert '==' in line or '>=' in line, f'Invalid format: {line}'
        print('✅ requirements.txt format valid')
        "
    
    - name: Test summary
      if: always()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "✅ All checks passed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
        echo "1. Review the dependency changes" >> $GITHUB_STEP_SUMMARY
        echo "2. Test on Railway preview deployment" >> $GITHUB_STEP_SUMMARY
        echo "3. Merge if everything looks good" >> $GITHUB_STEP_SUMMARY

  # Notify on PR status
  notify:
    name: Update PR Status
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: PR Status Comment
      uses: actions/github-script@v8
      with:
        script: |
          const status = '${{ needs.test.result }}' === 'success' ? '✅ Tests Passed' : '❌ Tests Failed';
          const message = `${status}\n\nAutomated tests have completed. ${
            '${{ needs.test.result }}' === 'success' 
              ? 'Safe to test on preview deployment.' 
              : 'Please review the test failures before merging.'
          }`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });

